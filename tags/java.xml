<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title>osa1.net - Posts tagged java</title>
    <link href="http://osa1.net/tags/java.xml" rel="self" />
    <link href="http://osa1.net" />
    <id>http://osa1.net/tags/java.xml</id>
    <author>
        <name>Ömer Sinan Ağacan</name>
        <email>omeragaca@gmail.com</email>
    </author>
    <updated>2013-11-03T00:00:00Z</updated>
    <entry>
    <title>Observability of bottom values</title>
    <link href="http://osa1.net/posts/2013-11-03-observability-of-nulls.html" />
    <id>http://osa1.net/posts/2013-11-03-observability-of-nulls.html</id>
    <published>2013-11-03T00:00:00Z</published>
    <updated>2013-11-03T00:00:00Z</updated>
    <summary type="html"><![CDATA[<p>While ranting about how much I hate about null values in Java(and other langauges) on Haskell IRC channel, someone in the channel reminded me that we have <code>undefined</code> in Haskell, which is actually similar to null values in some sense.</p>
<p>The difference between Haskell’s <code>undefined</code> and null values in other languages is that Haskell’s <code>undefined</code> is <em>unobservable</em>. This means you can’t test for a value being <code>undefined</code> or not in Haskell, but you can test for null values in Java and other languages.</p>
<p>This means you can’t rely on some values being <code>undefined</code> or not. This makes it only useful for 1) unreachable code and 2) filling some parts in the code for now just to make it compile and later complete that parts(and I’m using <code>undefined</code> for this purpose very often).</p>
<p>This is what makes Haskell’s <code>undefined</code> a useful feature, while null values is clearly <em>Considered Harmful</em>™.</p>]]></summary>
</entry>
<entry>
    <title>Parametric polymorphism and unboxed representations</title>
    <link href="http://osa1.net/posts/2013-10-09-parametric-polymorphism-and-unboxed-repr.html" />
    <id>http://osa1.net/posts/2013-10-09-parametric-polymorphism-and-unboxed-repr.html</id>
    <published>2013-10-09T00:00:00Z</published>
    <updated>2013-10-09T00:00:00Z</updated>
    <summary type="html"><![CDATA[<p>This post was written 5 months ago – I just found it in my Github Gist archive and realized it’s not published. I’m publishing it now.</p>
<hr />
<p>It’s just occurred to me that we can’t have parametric polymorphism for unboxed values, unless that unboxed values share same layout in memory, or you duplicate polymorphic definition for each instance. This may be obvious for most of you but I just realized this while working on a Java project and found it interesting.</p>
<p>I think this is also the reason why we can’t instantiate generics in Java with primitive types.</p>
<p>Here’s an explanation:</p>
<p>Let’s think this C++ code:</p>
<pre class="sourceCode cpp"><code class="sourceCode cpp"><span class="kw">struct</span> test2
{
  <span class="dt">int</span> a, b;
  test2(<span class="dt">int</span> a, <span class="dt">int</span> b) : a(a), b(b) {}
};

<span class="kw">struct</span> test3
{
  <span class="dt">int</span> a, b, c;
  test3(<span class="dt">int</span> a, <span class="dt">int</span> b, <span class="dt">int</span> c) : a(a), b(b), c(c) {}
};

<span class="dt">void</span> f2() {}

<span class="kw">template</span>&lt;<span class="kw">typename</span> T&gt;
T f3(T t)
{
  t.a = <span class="dv">20</span>;
  <span class="kw">return</span> t;
}

<span class="dt">int</span> main()
{
  test2 t2(<span class="dv">1</span>, <span class="dv">2</span>);
  test3 t3(<span class="dv">1</span>, <span class="dv">2</span>, <span class="dv">3</span>);
  f3&lt;test2&gt;(t2);
  f3&lt;test3&gt;(t3);
  <span class="kw">return</span> <span class="dv">0</span>;
}</code></pre>
<p>The key thing to realize here is that I’m passing parameter by value, ie. values are copied to function stack frame. But this function is still polymorphic on parameter type. This is possible in C++ because for each distinct instance of <code>f3</code>, a specialized code will be generated. To observe this, I put a breakpoint to that <code>f3</code> function and looked to disassembly output.</p>
<pre><code>        18	T f3(T t)
0x400af6  &lt;+0x0000&gt;         push   rbp
0x400af7  &lt;+0x0001&gt;         mov    rbp,rsp
0x400afa  &lt;+0x0004&gt;         mov    QWORD PTR [rbp-0x10],rdi
        19	{
        20	  t.a = 20;
0x400afe  &lt;+0x0008&gt;         mov    DWORD PTR [rbp-0x10],0x14
        21	  return t;
0x400b05  &lt;+0x000f&gt;         mov    rax,QWORD PTR [rbp-0x10]
        22	}
0x400b09  &lt;+0x0013&gt;         pop    rbp
0x400b0a  &lt;+0x0014&gt;         ret</code></pre>
<p>And this is for second call:</p>
<pre><code>        18	T f3(T t)
0x400b0b  &lt;+0x0000&gt;         push   rbp
0x400b0c  &lt;+0x0001&gt;         mov    rbp,rsp
0x400b0f  &lt;+0x0004&gt;         mov    rdx,rdi
0x400b12  &lt;+0x0007&gt;         mov    eax,esi
0x400b14  &lt;+0x0009&gt;         mov    QWORD PTR [rbp-0x20],rdx
0x400b18  &lt;+0x000d&gt;         mov    DWORD PTR [rbp-0x18],eax
        19	{
        20	  t.a = 20;
0x400b1b  &lt;+0x0010&gt;         mov    DWORD PTR [rbp-0x20],0x14
        21	  return t;
0x400b22  &lt;+0x0017&gt;         mov    rax,QWORD PTR [rbp-0x20]
0x400b26  &lt;+0x001b&gt;         mov    QWORD PTR [rbp-0x10],rax
0x400b2a  &lt;+0x001f&gt;         mov    eax,DWORD PTR [rbp-0x18]
0x400b2d  &lt;+0x0022&gt;         mov    DWORD PTR [rbp-0x8],eax
0x400b30  &lt;+0x0025&gt;         mov    rax,QWORD PTR [rbp-0x10]
0x400b34  &lt;+0x0029&gt;         mov    edx,DWORD PTR [rbp-0x8]
        22	}
0x400b37  &lt;+0x002c&gt;         pop    rbp
0x400b38  &lt;+0x002d&gt;         ret</code></pre>
<p>So what happened here is two new functions is generated from the definition, one with type <code>test2 f3(test2)</code> and one with type <code>test3 f3(test3)</code>. This gives a great opportunity, for instance, we can have this function:</p>
<pre class="sourceCode cpp"><code class="sourceCode cpp"><span class="ot">#include &lt;iostream&gt;</span>

<span class="kw">template</span>&lt;<span class="kw">typename</span> T&gt;
T someFun(T arg1, T arg2)
{
  <span class="kw">return</span> arg1 + arg2;
}

<span class="dt">int</span> main(<span class="dt">int</span> argc, <span class="dt">const</span> <span class="dt">char</span> *argv[])
{
  std::cout &lt;&lt; someFun&lt;<span class="dt">int</span>&gt;(<span class="dv">1</span>, <span class="dv">2</span>) &lt;&lt; std::endl;
  std::cout &lt;&lt; someFun&lt;<span class="dt">float</span>&gt;(<span class="fl">1.</span><span class="dv">4</span>, <span class="dv">2</span>) &lt;&lt; std::endl;

  <span class="kw">return</span> <span class="dv">0</span>;
}</code></pre>
<p>..which is impossible to have in Java, without manually overloading the method definition.</p>
<p>(An off-topic but interesting note: I was expecting <code>SP</code> to be set here, but here it’s not set. I think the reason is that the compiler is clever enough to see there is no recursive calls, so no need to set <code>SP</code>, when I added a dummy function call in the middle of <code>f3</code>, <code>SP</code> is got set)</p>
<p>So in a way, C++ generics are gives us the most general way for parametric polymorphism. For any type you instantiated the template with, it generates a specialized definition. And if that definition is accepted by type checker, you’re fine.</p>
<p>This also why we don’t need a template definition like <code>template &lt;class C : HasY&gt;</code>. Because that <code>HasY</code> information is completely redundant. If specialized code is well-typed, than it’s OK.</p>
<p>This is also one of the reasons why compiling C++ programs takes that long.</p>]]></summary>
</entry>
<entry>
    <title>ctpop ve bitmapler</title>
    <link href="http://osa1.net/posts/2011-12-31-ctpop-ve-bitmapler.html" />
    <id>http://osa1.net/posts/2011-12-31-ctpop-ve-bitmapler.html</id>
    <published>2011-12-31T00:00:00Z</published>
    <updated>2011-12-31T00:00:00Z</updated>
    <summary type="html"><![CDATA[<p>Bugün çok fantastik birşey gördüm, anlatmazsam ölürüm(uygun bir başlık düşünmem tüm yazıyı yazmamdan daha uzun sürdü o yüzden idare edin hehe).</p>
<p>Diyelim ki bir veri yapısı tasarlıyoruz, bir nodedan bir sürü başka nodea veya elemana pointerlar olacak. Bir yandan da bellek kullanımını minimum tutmak istiyoruz. Pointerları tutan arrayimizde hiç boş yer olmamalı.</p>
<p>Bir bitmap tutuyoruz. Büyük ihtimalle integer oluyor(Java primitive int tipi 32bit olmak zorunda mesela). Diyelim ki bu node’un n. indexine bir eleman/pointer ekleyeceksiniz. Bitmap ilk başta 0 tabii. Şu şekilde bitmap’de ilgili elemanı 1 yapıyoruz:</p>
<pre><code>bmp = bmp | 1 &lt;&lt; n</code></pre>
<p>Buraya kadar herşey çok basit. Bu noktadan sonra bu bitmape göre 30. elemanın arrayde nereye denk geldiğini bulmamız lazım. Bunun için şu formülü kullanıyoruz:</p>
<pre><code>ctpop(bmp &amp; ((1&lt;&lt;n)-1))</code></pre>
<p><code>ctpop</code>, population count fonksiyonu, yani bir sayının iki tabanında gösterilişindeki 1 bitleri sayıyor. Bu Java’da <code>Integer.bitCount</code> fonksiyonu(öhm, static methodu) ile bulunabilir.</p>
<p>Birkaç deneme yaparak nasıl yaptığını anlayabilir ve kendimizi ikna edebiliriz:</p>
<pre class="sourceCode python"><code class="sourceCode python">In [^<span class="dv">2</span>]: bmp = <span class="dv">0</span>
In [^<span class="dv">3</span>]: bmp |= <span class="dv">1</span> &lt;&lt; <span class="dv">15</span>
In [^<span class="dv">4</span>]: ctpop(bmp &amp; ((<span class="dv">1</span>&lt;&lt;<span class="dv">15</span>)-<span class="dv">1</span>))
Out[^<span class="dv">4</span>]: <span class="dv">0</span>
In [^<span class="dv">5</span>]: bmp |= <span class="dv">1</span> &lt;&lt; <span class="dv">21</span>
In [^<span class="dv">6</span>]: bmp |= <span class="dv">1</span> &lt;&lt; <span class="dv">10</span>
In [^<span class="dv">7</span>]: ctpop(bmp &amp; ((<span class="dv">1</span>&lt;&lt;<span class="dv">10</span>)-<span class="dv">1</span>))
Out[^<span class="dv">7</span>]: <span class="dv">0</span>
In [^<span class="dv">8</span>]: ctpop(bmp &amp; ((<span class="dv">1</span>&lt;&lt;<span class="dv">15</span>)-<span class="dv">1</span>))
Out[^<span class="dv">8</span>]: <span class="dv">1</span>
In [^<span class="dv">9</span>]: ctpop(bmp &amp; ((<span class="dv">1</span>&lt;&lt;<span class="dv">21</span>)-<span class="dv">1</span>))
Out[^<span class="dv">9</span>]: <span class="dv">2</span></code></pre>
<p>Eğer arraydeki n. yere bir eleman ekliyorsak, n’den itibaren arrayi bir kaydırmamız lazım. En büyük index her zaman arrayde de daha sonda oluyor.</p>
<p>Ne yaptığına bakalım. 25. elemanın arraydeki yerine bakarken, <code>1 &lt;&lt; 25</code>i hesaplıyorum ki bu aslında (2 tabanında) 1 ve yanına 25 tane 0 koymak demek. Daha sonra bu sayıdan 1 çıkararak, en sağdan itibaren(en anlamsız bitten itibaren) tüm 0ları 1 yapıyorum, ilk gördüğüm 1’i 0 yapıyorum, gerisine dokunmuyorum(bu şartlar altında geriye kalan tüm bitler 0 oluyor). Daha sonra bu sayı ile bitmap’i logical and(bazı yerlerde bitwise and diyor, aynı şeyler sanırım?) işlemine sokup ctpop yaptığımda, bitmap’de (1 &lt;&lt; n)’den itibaren kaç tane 1 olduğunu saymış oluyorum ve bu da bana array’deki indeximi veriyor. Çok mantıklı.</p>
<p>Bu arada kullandığınız dile göre bu işlemi daha kolay bir şekilde yapabilirsiniz. Bazı diller(Java’da <code>Integer.bitcount</code>, Common Lisp’de <code>logcount</code> gibi) direkt olarak <code>bitCount</code> gibi fonksiyonlar sunuyor. Bir de ben Common Lisp’de hiç kaydır 1 çıkart falan demeden direkt “şu bitle şu bit arasında kaç 1 olduğunu say” şeklinde bir fonksiyon yazdım, bitwise trickler yapmadan, şöyle:</p>
<pre><code>(defun ctpop (bitmap &amp;key (start 0) (end 32))
  (logcount (ldb (byte (- end start) start) bitmap)))</code></pre>]]></summary>
</entry>
<entry>
    <title>GUI programlama, IDEler, ve Python hakkında</title>
    <link href="http://osa1.net/posts/2011-05-22-gui-programlama--ideler--ve-python-hakkinda.html" />
    <id>http://osa1.net/posts/2011-05-22-gui-programlama--ideler--ve-python-hakkinda.html</id>
    <published>2011-05-22T00:00:00Z</published>
    <updated>2011-05-22T00:00:00Z</updated>
    <summary type="html"><![CDATA[<p>Son birkaç gündür yoğun bir şekilde GUI programlama ve Java ile uğraştım. İlk başta 2 arkadaşımla beraber basit bir chat sunucu/istemcisi yazmaya başladık(<a href="https://github.com/osa1/simple-chat">kaynak koda</a> github depomuzdan erişebilirsiniz). Daha önceki tecrübelerimden (lisede web tasarım, daha sonra Python + GTK/QT ile arayüz denemelerim) arayüz tasarımından ne kadar nefret ettiğimi bildiğimden, bu projede ben sunucu ve istemci altyapısını hazırlamakla uğraştım. Fakat sonra bir ödev gereği, arayüz tasarımıyla da kendim uğraşmam gerekti.</p>
<p>Ödev Java ile yapılacaktı ve dolayıyısla arayüz olarak Swing kullandım. Başlangıç için Eclipse için <a href="http://code.google.com/javadevtools/wbpro/index.html">WindowBuilder</a> eklentisi ile ana çerçeve + layoutları oluşturup daha sonra elle yazdım. Bu süreçte şunu farkettim, adam gibi bir IDE, işleri daha önce tahmin edemeyeceğim kadar kolaylaştırıyor. Asıl olarak Python ile yazan biri olarak, birkaç gün öncesine kadar her işimde VIM kullanıyordum ve çok da memnundum(arayüz tasarımı yapmıyorum). Şu birkaç gün(sadece ödev için 1460 satır kod) bazı şeyleri farketmemi sağladı.</p>
<p>Onlarca sınıf, her sınıf için onlarca method, ve bu sınıflar arasında karışık ilişkilerin olduğu bir işle uğraşıyorsanız, iyi bir IDE şart. Dökümantasyonda geçirdiğiniz çok kısaltıyor.</p>
<p>Static typing çok hoş bir olay. Okula başladıktan sonra bol miktarda C(programlama yarışması) ve Java(ödevler) uğraşmam gerekti. Henüz sadece birkaç dili birşeyler üretebilecek seviyede biliyorum ve bu konuda çok da bilgili değilim, ama Python ile en çok dökümantasyon ve IDE sıkıntısı çekiyorum. Ücretli IDEleri denemedim ama denediğim tüm ücretsiz Python IDEleri Autocomplete konusunda çaresiz kalıyorlar. Python’da aşağıdaki gibi birşey görebilmek için herşeyimi(?!) verirdim:</p>
<div class="figure">
<img src="/images/eclipse_autocomplete.png" />

</div>
<p>Hatta mesela şöyle birşey yapabilseydim:</p>
<div class="figure">
<img src="/images/eclipse_autocomplete1.png" />

</div>
<p>Ama yok, örneğin PyDev daha aşağıdaki kodda çakılıyor:</p>
<pre class="sourceCode python"><code class="sourceCode python">cls = Class1()
cls.</code></pre>
<p>Daha burda bile, Class1’in methodlarını gösteremiyor. Direkt olarak <code>Class1.</code> şeklinde yazıp, autocomplete çalıştırırsak, methodları gösteriyor, bu iyi, fakat bu sefer de bound-unbound method farkını anlayamıyor ve bound methodları da gösteriyor. Ki bound methodlar bu şekilde çağırılamaz. Fail.</p>
<p>WingIDE diyenler için, personal sürümü, sanki “öyle gerekli özellikler çıkaralım ki, kimse almasın” diye düşünülerek hazırlanmış. O kısıtlı özellikleri çıkardığımızda, Vim ile de yapıyorum zaten geri kalanları. <a href="https://wingware.com/wingide/features/personal">Burdan bakın</a>. Professional sürümü de çok pahalı.</p>
<p>PyCharm diyenler için, Open Source lisansı ücretsiz, fakat <a href="http://www.opensource.org/docs/osd">Open Source Definition</a>’a uyan bir projeniz olmalı. Benim yok.</p>
<p>Eclipse, Java’nın verdiği acıyı inanılmaz derecede hafifletiyor. Yoksa sınıflar arasındaki saçma derecede karmaşık ilişkiler başka türlü çözülemez. Python’da ise, benzer karışıklıkta tasarlanmış(muhtemelen başka bir dilde, örneğin QT için C++) bir kütüphane ile çalışıyorsanız, acınızı hafifletecek hiçbir şey yok.</p>
<p>Konudan biraz sapacağım ama, Python hakkında beni sinirlendiren bir başka konu da, threading ve socket olayları. Ne zaman socket veya threading kullansam, mutlaka bir problemle karşılaşıyorum ve bunu ne zaman IRC’de sorsam, mutlaka birileri Twisted kullanmamı söylüyor. Kötü alışkanlıklardan, yanlış programlamadan vs bahsedip duruyorlar. Sanki Freenode #python kanalında, içinde şöyle bir kod olan bir sürü bot varmış gibi:</p>
<pre class="sourceCode python"><code class="sourceCode python"><span class="kw">if</span> <span class="st">&quot;socket&quot;</span> in msg or <span class="st">&quot;thread&quot;</span> in msg:
    <span class="ot">self</span>.reply(msg, <span class="st">&quot;Use twisted!!1 bad habits good code debugging bla bla bla&quot;</span>)</code></pre>
<p>Java’da yaklaşık bir hafta kadar önce kullanılabilr bir hale getirdiğimiz chat istemci/sunucusu, dilin kendi thread ve socketlerini kullanıyor. Thread ve socket kullanımı ile alakalı dökümantasyon hariç hiçbir yere baktığımı hatırlamıyorum. Python’dan gelen birisi olarak şaşırtıcı derecede kolay ve stabil oldu.</p>
<hr />
<p>Bir süredir kafamda kendi IRC istemcimi yazma fikri var. Şu anda yazabilmek için gerekli herşeyi biliyorum. Dün oturdum, Java ve Python’da IRC sunucusuna bağlanabilmek için gerekli en küçük kodu yazmaya karar verdim(arayüz ile beraber). Java’da, kendi socket ve thread sınıfları ve Swing ile kolayca yazdım(bu arada Swing’in ne kadar kötü gözüktüğüne dikkat, platform bağımsız olarak iğrenç gözüken bir arayüz kütüphanesi kendisi, ehehe):</p>
<div class="figure">
<img src="/images/irc_client_java.png" />

</div>
<p>Python’da QT kullandım. Fakat garip bir şekilde, ne zaman sunucudan bir mesaj gelse, QT segmentation fault veriyor:</p>
<pre><code>QObject::connect: Cannot queue arguments of type &#39;QTextCursor&#39;
(Make sure &#39;QTextCursor&#39; is registered using qRegisterMetaType().)
Segmentation fault</code></pre>
<p>IRC’de sorduğumda aldığım yanıtı tahmin edersiniz zaten.</p>
<p>Şimdi oturup düşünüyorum, bir yanda Java, sadece dilin kütüphaneleri ile sunucuya bağlanıp, mesaj gönderip aldığım kod, arayüz ile beraber hazır bile. Elimin altında Eclipse gibi bir IDE var. Python ile yapmak istersem, ekstra olarak uğraşmam gerekecek şeyler: PyQT’nin dökümantasyonu, Twisted’ın dökümantasyonu, Twisted’ı öğrenmek, QT Designer ile tasarımı koda çevirmek için ekstra bir işlem yapmak, daha sonra bir daha QT Designer ile değişiklik yapamamak(Eclipse + WindowBuilder ile tasarım/kod arasında değiştirmek tek tuş).</p>
<p>Adil olmak lazım, Java ile başta bahsettiğim projeye girişmeden önce, bunların farkında değildim. Python ile ise bu boyutta bir proje yapmadım. Küçük küçük bir sürü script(ki her biri, yazdığım satır sayısına göre işimi abartı derecede kolaylaştırıyor), en büyük projem kendi blogum.</p>
<p>Python bana programlamaya ilk başladığım günlerde bile birşeyler üretme imkanı verdi. Programlamaya başladığım sene(lisede yaptığım web tasarım + programlamayı saymıyorum), ilk önce kendi blogumu, daha sonra <a href="http://osa1.net/osa1-arsiv-duzenleme-scriptcigi-nautilus-scripti/">arşiv düzenleyici</a>yi yapabildim. Başka bir dille yapamazdım.</p>
<p>Şu anda static typed bir dilin bana sağladıklarını biliyorum(en azından bu projeleri yapmaya başlamadan öncekine göre çok daha iyi biliyorum). Şimdi dynamic typed bir dilin avantajlarını görmem lazım.</p>
<p>O yüzden IRC istemcimi her şeye rağmen Python ile yazacağım. Java ile yazarsam, kendimi tekrar etmekten başka birşey yapmamış olacağım. Twisted’ı ihtiyacım olduğu kadarıyla öğrenmeye bugün başlıyorum. Çalıştırılabilir bir hale gelir gelmez yorumlarımı buraya yazacağım.</p>
<p>(Bu arada Twisted’da IRC istemci protokolü hazır olarak var)</p>
<h2 id="vim-hakkında">VIM hakkında</h2>
<p>Vim hakkında da birkaç birşey söyleyeyim hazır IDE/Editor muhabbetine girmişken. Yaklaşık 7-8 aydır(sanırım) Vim kullanıyorum, ve şu dakikadan sonra Vim’siz hiçbir şey yazamaz oldum. Maillerimi Vim ile yazıyorum(sylpheed), bloga yazıları Vim ile giriyorum(kendi eklentim), Eclipse’de <a href="http://www.viplugin.com/viplugin/">Vim eklentisi</a> kullanıyorum(o olmasa Eclipse kullanamazdım), Lisp ile uğraştığımda, Emacs kullanmam gerekiyor ve Emacs’i <a href="http://www.emacswiki.org/emacs-es/Vimpulse">vimpulse</a> ile kullanıyorum. Şöyle iyi böyle güzel diye anlatmayacağım, resmen bağımlı oldum. Arkadaşların, normal IDE/Editorlerde nasıl yazdıklarını görünce duygulu anlar yaşıyorum.</p>
<p>Bu yüzden IDE seçerken dikkat ettiğim konulardan biri de Vim desteği(veya eklentileri) oluyor. Eclipse o açıdan(viPlugin sağolsun) çok başarılı. Söz konusu Java olduğunda düşünüyorum da, Eclipse olmasa herhalde hiçbir şey yazamazdım.(bu arada WingIDE Vim tuşlarını destekliyormuş, ne kadar başarılıdır bilmiyorum)</p>]]></summary>
</entry>
<entry>
    <title>Arşiv düzenleyici klasör dinleme özelliği ve tatilde yapılanlar</title>
    <link href="http://osa1.net/posts/2011-03-13-arsiv-duzenleyici-klasor-dinleme-ozelligi-ve-tatilde-yapilanlar.html" />
    <id>http://osa1.net/posts/2011-03-13-arsiv-duzenleyici-klasor-dinleme-ozelligi-ve-tatilde-yapilanlar.html</id>
    <published>2011-03-13T00:00:00Z</published>
    <updated>2011-03-13T00:00:00Z</updated>
    <summary type="html"><![CDATA[<p>Çarşamba ve perşembe günleri kardan dolayı tatildi, cuma günü 2 saat derse girdim, cumartesi ve pazarla beraber 5 gün tatil yapmış gibi oldum. Birkaç fikrimi koda dökmek için fazlasıyla zamanım vardı.</p>
<p>Arşiv düzenleyiciye klasör dinleme özelliğini sonunda ekledim. Bir süredir üzerinde düşünüyordum ama birkaç şeyden dolayı bir türlü başlayamamıştım. Birincisi, kaynak kod aşırı derecede karışık, yeniden geliştirilebilir bir şekilde yazılmamıştı. Birşey eklemeyi bırak, birkaç gün sonra kendim okuduğumda kodda ne olup bittiğini anlamıyordum. Tüm programı neredeyse yeniden yazdım.</p>
<p>Çok daha esnek ve anlaşılabilir bir yapı oluşturdum. Büyük ihtimalle bundan sonraki güncellemeler çok daha kolay olacak. Tüm yapıyı değiştirmemin bir sebebi de klasör dinleme özelliğinin bazı şeylere ihtiyaç duymasıydı.</p>
<p>Klasör dinleme demişken, bu konuda şaşırtıcı derecede fazla alternatif var. <a href="https://github.com/seb-m/pyinotify">inotify</a>, fam, <a href="http://people.gnome.org/~veillard/gamin/">gamin</a>, <a href="http://pypi.python.org/pypi/watchdog">watchdog</a>, <a href="https://github.com/shaurz/fsmonitor">fsmonitor</a>, pyfilesystem .. Bunların hepsini az çok kurcaladım. En son istediğim basitlikte/yeterlilikte fsmonitor kullandım.(FF’de yardımcı olan herkese teşekkürler. <a href="http://ff.im/zbSag">İlgili feed.</a>)</p>
<p>Yeni sürümde henüz arayüz yok, tüm yapıyı değiştirince arayüz kısmı problem oldu bu sefer. Eğer arayüz yaparsam, gtk ile değil de wx ile yapacağım sanırım. gtk’da arkaplanda bir işlem yaparken arayüzü güncelleme konusunda çok sıkıntı yaşadım. Çalışan fonksiyon arayüzü güncellemek için başka fonksiyonları çağırsa bile, fonksiyon çalışmasını bitirmeden arayüz güncellenmiyor. Arayüzü güncellemek için, belirli aralıklarla fonksiyonu durdurmak gerekiyor(örneğin döngüdeki her bir adımda, yield ile bir değer döndürüp, <code>gobject.idle_add(task)</code> ile döngünün ilerlemesi sağlanabilir). Belki wx’de daha kolaydır.</p>
<p><a href="http://github.com/osa1">Github alanımdan</a> indirebilirsiniz. System tray’de duracak basit bir arayüzden sonraki adım, yanlış etiketleri düzenlemek ve eksik etiketleri tamamlamak olacak sanırım.</p>
<h2 id="design-patterns">Design patterns</h2>
<p>Öğrenmek istediğim birkaç konu, başlamak istediğim birkaç kitap vardı. Hazır esnek, geliştirilebilir, anlaşılabilir program yazmakta sıkıntı yaşıyorken, <a href="http://www.amazon.com/First-Design-Patterns-Elisabeth-Freeman/dp/0596007124/ref=sr_1_1?ie=UTF8&amp;qid=1300026654&amp;sr=8-1">Head First Design Patterns</a>’a başladım ve şunu farkettim, OOP belki yeni başlayanlar için FP kadar zor değil fakat yeterince esnek/anlaşılır/geliştirilebilir bir yapı kurmak zor bir olay. Design patterns ile ilgilendikçe şunu farkettim, bu patternlar OOP’de çok karşılaşılan problemler için üretilmiş<a href="http://stackoverflow.com/questions/327955/does-functional-programming-replace-gof-design-patterns">*</a> ve aslında heryerdeler(böyle mi yazılıyor). Örneğin daha önce birkaç blog/feed’de sövdüğüm java.io decorator dolu. Twisted factory/reactor kullanıyor vs. Ben de son arşiv düzenleyicinin dosya izleme ve gerekli sinyalleri gönderme kısmında observer kullandım(daha çok öğrenme amaçlıydı ama güzel oldu).</p>
<p>Fonksiyonel programlamaya karşı sebebini açıklayamadığım bir ilgim var. Neredeyse her gün OO programlama yapmama rağmen(dersler gereği, halbuki hiç FP yapmıyoruz) OOP bilmiyormuşuz bunu farkettim. Aynı FP gibi, prensipleri vs. varmış. C ile uğraştığımız bu dönem OOP’in bir teknoloji değil, teknik olduğunun az da olsa farkına varmıştım ama design patterns ile küçük çaplı bir aydınlanma yaşadım resmen.</p>
<p>Design patterns, oop vs. demişken, python’da tip kontrolleri ver encapsulation ile alakalı: <a href="http://stackoverflow.com/questions/1549801/differences-between-isinstance-and-type-in-python#">differences between isinstance() and type() in python</a>, <a href="http://stackoverflow.com/questions/378927/what-is-the-best-idiomatic-way-to-check-the-type-of-a-python-variable">what is the best way to check the type of a python variable?</a>, <a href="http://www.aleax.it/gdd_pydp.pdf">alex martelli’nin design patterns in python sunumu</a>.</p>
<h2 id="vim-için-markdown-önizleme">Vim için markdown önizleme</h2>
<p>Vim için python ile eklenti yazma olayını biraz kurcalamıştım, geçen aklıma geldi, bloga vim ile yazı nasıl ekleyebilirim?</p>
<p>Aslında genel olarak, vim ile <code>subprocess.Popen()</code> fonksiyonunu çağırabildikten ve <code>vim.current.buffer[:]</code> ile buffer’ı alabildikten sonra, gerisi Python. Şimdilik yazı eklemeyi yapamadım ama markdown için önizleme eklentisi yaptım.</p>
<p>Henüz kurulum için hazır değil ama, <code>so: markdownpreview.vim</code> ile ekledikten sonra, <code>:call MarkdownPreview()</code> ile önizlemeyi görebilirsiniz. Birkaç problem var, birincisi, buffer’dan türkçe karakterler garip bir şekilde geliyor. Onunla uğraşmak lazım. İkincisi de, bir preview ekranını kapatmadan bir daha çalıştırırsanız, bir ekran daha açılıyor. Bir ara düzelteceğim. Önizleme ekranı gtk ile yapıldı.</p>
<p>Kaynak kod github alanımda. Bu arada, vim’e python ile eklenti yazma hakkında <a href="http://vimdoc.sourceforge.net/htmldoc/if_pyth.html">resmi kaynak</a>.</p>
<hr />
<p>Bunların dışında blogda da birkaç iyileştirme yaptım ama önemli bir değişiklik yok.</p>
<p>Bundan sonra yazmayı planladıklarım: Editor(vim) vs. IDE muhabbeti ve Pardus pisi paket yapımı ile alakalı birkaç şey. Okunacaklar: <a href="http://www.dabeaz.com/coroutines/index.html">A Curious Course on Coroutines and Concurrency</a>(evet hala okuyamadım), <a href="http://abhishek.geek.nz/docs/lisp-answers/">Before you start learning Lisp</a>, <a href="http://python.net/~goodger/projects/pycon/2007/idiomatic/handout.html#command-line-processing">Code like a pythonista: Idiomatic Pytohn</a>, <a href="http://ivory.idyll.org/articles/advanced-swc/">Intermediate and Advanced Software Carpentry in Python</a>, <a href="http://weblog.raganwald.com/2007/03/why-why-functional-programming-matters.html">Why why functional programming matters matters</a>.</p>]]></summary>
</entry>
<entry>
    <title>Bil113 finale hazırlık</title>
    <link href="http://osa1.net/posts/2010-12-23-bil113-finale-hazirlik.html" />
    <id>http://osa1.net/posts/2010-12-23-bil113-finale-hazirlik.html</id>
    <published>2010-12-23T00:00:00Z</published>
    <updated>2010-12-23T00:00:00Z</updated>
    <summary type="html"><![CDATA[<p>Bugün bil113 final için birkaç satır birşeyler yazdım, Deitel’den Java: How to Program’a baktım biraz. Deitel’in Python kitabı rezaletti, ama bu iyiymiş(Amazon’dan da çılgın puanlar almış zaten). Recursion, searching and sorting bölümlerinin alıştırmalarını falan çözdüm. Kağıt üzerinde yine bildiğimizden çok az puanlar alacağız ama, neyse..</p>
<p>Hazırlık için çözülebilecek bazı klasik basit problemler:</p>
<ul>
<li><a href="http://en.wikipedia.org/wiki/Bubble_sort">Bubblesort</a></li>
<li><a href="http://en.wikipedia.org/wiki/Selection_sort">Selection sort</a></li>
<li><a href="http://en.wikipedia.org/wiki/Insertion_sort">Insertion sort</a></li>
<li><a href="http://en.wikipedia.org/wiki/Merge_sort">Merge sort</a></li>
<li><a href="http://en.wikipedia.org/wiki/Bucket_sort">Bucket sort</a> (bunu sanırım yapmıycam, sıkıldım zaten, garip birşey)</li>
<li><a href="http://en.wikipedia.org/wiki/Quicksort">Quicksort</a> (Java’da yap(a)madım henüz)</li>
<li><a href="http://en.wikipedia.org/wiki/Linear_search">Linear search</a> (ehehe, bu da algoritma sayılıyormuş. az da olsa zorlaştırmak için, recursive olarak çözülebilir)</li>
<li><a href="http://en.wikipedia.org/wiki/Binary_search">Binary search</a></li>
<li><a href="http://en.wikipedia.org/wiki/Euclidean_algorithm">Recursive ebob(gcd)</a> tespiti</li>
<li>Recursive olarak string’i ters çevirme</li>
<li>Recursive palindrome tespiti</li>
<li><a href="http://en.wikipedia.org/wiki/8_queens_puzzle">8 queens puzzle</a></li>
<li>Labirentten çıkışı bulan bir program (bitti sayılır, küçük bir düzenlemeden sonra buraya yazacağım)</li>
</ul>
<p>Aksini belirttiklerim hariç, çözümlerim <a href="http://osa1.net/media/bil113final/Calisma.java">bu</a> ve <a href="http://osa1.net/media/bil113final/Sort.java">şu</a> dosyalarda(main methodları testlerim için). Sort.java dosyasındaki düzenleme methodların ilk bakışta arrayi değiştirmesi gerekirken aslında neden değiştirmediği(ya da hangi arrayi değiştirdiği) de düşünülebilir. İlk başta anlam verememiştim. Tam sınav sorusu bence.</p>
<p>Bunların dışında, codingbat’deki sorular güzel. Hepsi bittikten sonra çözümlerini yazacağım buraya.</p>
<p>Bu arada, biraz konu dışı olacak ama, Python’da tek satırda quicksort, ibretlik:</p>
<pre class="sourceCode python"><code class="sourceCode python"><span class="kw">def</span> qsortr(<span class="dt">list</span>):
    <span class="kw">return</span> [] <span class="kw">if</span> <span class="dt">list</span>==[]  <span class="kw">else</span> qsortr([x <span class="kw">for</span> x in <span class="dt">list</span>[<span class="dv">1</span>:] <span class="kw">if</span> x &lt; <span class="dt">list</span>[^<span class="dv">0</span>]) + [<span class="dt">list</span>[^<span class="dv">0</span>] + qsortr([x <span class="kw">for</span> x in <span class="dt">list</span>[<span class="dv">1</span>:] <span class="kw">if</span> x &gt;= <span class="dt">list</span>[^<span class="dv">0</span>])</code></pre>
<p>Bu arada(2), bu yazıyı aşağıda ekran görüntüsünü görebileceğiniz programla ekliyorum: <img src="/images/screenshot-yaziekle.png" alt="lol" /></p>
<p>Bunu da yine fizik finalinden önce yazmıştım. Burda, adres satırı Django admin’de olduğu gibi, yazı başlığından otomatik olarak üretiliyor. Henüz bazı durumlarda yanlış sonuçlar verebiliyor. Tek tuşla yazılı django development server’da ekliyorum, kontrol edip, web’e tıklıyorum ve bir daha gönderiyorum. Çok pratik oldu. Normalde localde admin panelinden yazıyı ekleyip, herşey tamamsa, webe kopyalıyordum. Şimdilik sadece benim yönetici panelimde çalışsa da, biraz düzenlemeyle istediğim esnekliğe getireceğim programı. Daha sonra birkaç ekleme daha yapıp burada yayınlayacağım yine.(örneğin dosya upload işini daha kolaylaştıracak birşeyler ekledikten sonra)</p>
<p>Yazı eklemeyi daha da kolay hale getirebilmek için önceki projelerimden bkz. <a href="http://www.osa1.net/nautilus-icin-ftp-upload-scripti/">nautilus için ftp upload scripti</a></p>]]></summary>
</entry>
<entry>
    <title>Bil113 ödev5, grafik üzerinde verilen 2 nokta arasında ulaşım</title>
    <link href="http://osa1.net/posts/2010-12-16-bil113-odev5-grafik-uzerinde-verilen-2-nokta-arasinda-ulasim.html" />
    <id>http://osa1.net/posts/2010-12-16-bil113-odev5-grafik-uzerinde-verilen-2-nokta-arasinda-ulasim.html</id>
    <published>2010-12-16T00:00:00Z</published>
    <updated>2010-12-16T00:00:00Z</updated>
    <summary type="html"><![CDATA[<p>Ödevi kısaca başlıktaki gibi özetleyebiliriz. Bir yol haritamız var, verilen iki nokta arasındaki tüm yolları bulup, yolun ne kadar sürdüğünü hesaplamamız istendi.</p>
<p>Ödev hakkında daha detaylı bilgi, girdi formatı, vs. için föyü <a href="http://ocsert.etu.edu.tr/bil113/odev/sorular/Odev5.pdf">şurdan</a> indirebilirsiniz.</p>
<p>Benim uyguladığım iki yöntem vardı, iki şekilde çözdüm yani ödevi. Bir tanesi, <a href="http://en.wikipedia.org/wiki/Breadth-first_search">breadth-first search</a> algoritmasıydı. Wikipedia’daki kodu ödeve uyarladım. İkinci yöntem de, kendi “recursive” yöntemdi.</p>
<p>Ödevi asistanlara gönderdiğim haliyle <a href="http://osa1.net/media/OmerSinanAgacanOdev5.rar">burdan</a> indirilebilir.</p>
<p>Onun dışında, 2. lab sınavındaki 4. sorunun çözümü de <a href="http://osa1.net/media/Soru3.java">burda</a>. Bence bu sınavdaki en/tek zor ve zevkli soruydu. Kısaca, belirtilen dosyanın içinden belirtilen kelimelerin kaç kere geçtiğini bulan bir program. Girdi formatı tam olarak sorudaki gibi olmalı, fakat soru elimde olmadığından formatı yazamıyorum, hueahea.</p>
<p>Bu arada unutmadan, kullanılan dil Java.</p>]]></summary>
</entry>
<entry>
    <title>Java ile Conway's Game of Life</title>
    <link href="http://osa1.net/posts/2010-12-05-java-ile-conways-game-life.html" />
    <id>http://osa1.net/posts/2010-12-05-java-ile-conways-game-life.html</id>
    <published>2010-12-05T00:00:00Z</published>
    <updated>2010-12-05T00:00:00Z</updated>
    <summary type="html"><![CDATA[<p>Bil113 dersi için 4. ödev Java ile biraz değiştirilmiş(basitleştirilmiş anlamında değil) Conway’s Game of Life yazmaktı. Ödev föyünü <a href="http://ocsert.etu.edu.tr/bil113/odev/sorular/Odev4.pdf">buradan</a> indirebilirsiniz.</p>
<p>Conway’s Game of Life’ın ne olduğu hakkında <a href="http://en.wikipedia.org/wiki/Conway&#39;s_game_of_life">Wikipedia</a>ya bakabilirsiniz. Ben bu ödevde daha önce denemediğim birşey denedim ve çok faydasını gördüm. Ara ara Haskell ve Lisp çalışıyorum, tabii ki fonksiyonel programlama denemez ama, Haskell ve Lisp’den öğrendiğim kadarıyla bazı fonksiyonel programlama yöntemlerini uygulamaya karar verdim. <a href="http://osa1.net/java-ile-2-kisilik-super-dandik-satranc-oyunu/">Bundan önceki satranç ödevi</a>nde oyunu test etme kısmında çok sıkıntı çekmiştim, bu oyunda da acayip kolay oldu. Uygulamaya çalıştığım fonksiyonel programlam yöntemleri şunlardı:</p>
<ul>
<li>Programımı mümkün olduğunca fazla parçaya bölmeliyim.</li>
<li>Bu parçaların her biri diğerlerinden ve programdan bağımsız çalışabilmeli.</li>
<li>Parçalar, dışarıdaki hiçbir veriye ulaşamamalı, ve dışarıdaki hiçbir veriyi değiştirmemeli. Bu sayede tam olarak bağımsız olabilirler.</li>
</ul>
<p>Dolayısıyla programımın parçaları, sadece parametre alıp, birşey döndürdüler. Testleri inanılmaz kolay oldu, aynı parametreleri yollayıp, döndürdükleri değerleri inceledim. Bu yöntemi daha sonra, 2 gün önceki Bil113 lab sınavında uyguladım, ve yine testlerim inanılmaz kolay oldu. Sınavın en zor sorusunun her parçasını sadece 1 kere test ettiğimi hatırlıyorum. Sınav cevaplarımı da birkaç güne yayınlayacağım.</p>
<p>Bu arada, ödevde ödev verilmeden önceki son derslerde öğrendiğimiz, inheritance, interface ve polymorphism gibi konuları uygulamamız için midir nedir, hoca orjinal oyunu biraz değiştirmiş, ve hiç gereği olmamasına rağmen bizi inheritance kullanmak zorunda bıraktı. O yüzden bazı kısımlar saçma gelebilir, onları inheritance(veya polymorphism) kullanmış olmak için yaptım.</p>
<p>Ödevi asistanlara gönderdiğim haliyle <a href="http://www.osa1.net/media/OmerSinanAgacanOdev4.rar">buradan</a> indirebilirsiniz.</p>]]></summary>
</entry>
<entry>
    <title>Java ile 2 kişilik süper dandik satranç oyunu</title>
    <link href="http://osa1.net/posts/2010-11-15-java-ile-2-kisilik-super-dandik-satranc-oyunu.html" />
    <id>http://osa1.net/posts/2010-11-15-java-ile-2-kisilik-super-dandik-satranc-oyunu.html</id>
    <published>2010-11-15T00:00:00Z</published>
    <updated>2010-11-15T00:00:00Z</updated>
    <summary type="html"><![CDATA[<p>Programlamaya giriş dersi için son ödevimiz Java ile 2 kişilik bir satranç oyunu yazmaktı. Ama bazı kısıtlamalarla. Ödevi gönderdiğimize göre kodumu yayınlayabilirim sanırım..</p>
<p>Öncelikle kısıtlamalar ve özellikler için <a href="http://ocsert.etu.edu.tr/bil113/odev/sorular/Odev3.pdf">ödev metni</a>ne bakabilirsiniz. Kısaca bahsetmek gerekirse:</p>
<ul>
<li>Rok, en passant(piyonun ileri çıkarken çarprazındakini yemesi)gibi bazı hareketler yok.</li>
<li>Oyun şahın yenilmesi ile bitiyor.</li>
<li>Tanımlanması gereken bazı methodlar var ve bu methodların aldığı parametreleri bile değiştiremiyoruz.</li>
<li>Inheritance, polymorphism, exception handling gibi konuları ödevin verildiği tarihte görmediğimizden kullanamıyoruz.</li>
<li>Piyonlar terfi edebilir. Yani karşı tarafa varan piyon başka bir taşa dönüşebiliyor. Bunda sorun yok.</li>
</ul>
<p>Bu kısıtlamalar kodumuzu çok kötü hale getirdi aslında. Özellikle polymorphism. Tüm taş tipleir için sınıf oluşturmamız gerekiyor, fakat polymorphism kullanamadığımızdan bunları ortak bir array’de toplayamıyoruz örneğin. Çok fazla kod tekrarı ve gereksiz kod oldu bu yüzden.</p>
<p>Benim bir sorunum da, ödevin başında kısıtlamalara dikkat etmeden kafama göre kod yazmam, daha sonra yazdığım kodu kısıtlamalara uydurmaya çalışmam oldu. Bu yüzden kod ekstra kötü oldu. Kodu okursanız, muhtemelen bazı yerler çok saçma gelecektir, oralar bu yüzden işte :) . Herşey bittikten sonra kodu belli bir formata uydurmaya çalışmak çok sıkıcı bir olay.</p>
<p>Bu arada merak edenler için, benim kodum toplam 876 satır. <a href="http://www.osa1.net/media/OmerSinanAgacanOdev3.tar">Buradan</a> indirebilirsiniz.</p>]]></summary>
</entry>
<entry>
    <title>Bil113 arasınav ve kağıt üzerinde kod yazmak</title>
    <link href="http://osa1.net/posts/2010-10-31-bil113-arasinav-ve-kagit-uzerinde-kod-yazmak.html" />
    <id>http://osa1.net/posts/2010-10-31-bil113-arasinav-ve-kagit-uzerinde-kod-yazmak.html</id>
    <published>2010-10-31T00:00:00Z</published>
    <updated>2010-10-31T00:00:00Z</updated>
    <summary type="html"><![CDATA[<p>Bugün olduğumuz Bil113 arasınavında gördük ki, “hello world”ü bile Eclipse, Netbeans vs. ile yazan bizler, iş kağıt kalem ile yazmaya gelince çakılıyoruz(ben öyle değil ama yine de çakıldım gerçi). Aslında sınavın kağıt kalemle çözmek için biraz zor olduğunu düşünüyorum. Sınavda onlarca dakika uğraştığım soruları bilgisayar karşısında 5 dakikada çözebildim.</p>
<p>Asal sayıları tespit etme gibi kolay soruları değil de, değişik bir şekilde çözdüğümü düşündüğüm üçgen sorusunu yazayım. Soru: verilen 3 kenarla bir üçgen oluşturulup oluşturulamayacağını döndür(boolean):</p>
<pre class="sourceCode java"><code class="sourceCode java"><span class="kw">public</span> <span class="dt">static</span> <span class="dt">boolean</span> <span class="fu">kontrol</span>(<span class="dt">int</span> a, <span class="dt">int</span> b, <span class="dt">int</span> c) {
    <span class="kw">return</span> (a &lt; b+c &amp;&amp; a &gt; Math.<span class="fu">abs</span>(b-c) &amp;&amp; b &lt; a+c &amp;&amp; b &gt; Math.<span class="fu">abs</span>(a-c) &amp;&amp; c &lt; a+b &amp;&amp; c &gt; Math.<span class="fu">abs</span>(a-b));
}</code></pre>
<p>Bu tek satırı kağıt üzerinde yazmak bayaa zor oluyor gerçi. Neyse. Sınavın sanırım en zor sorusu olan farklı tabanlarda sayıları kaydedip kendi aralarında işleme sokabildiğimiz soru:</p>
<pre class="sourceCode java"><code class="sourceCode java"><span class="kw">public</span> <span class="kw">class</span> Sayi {

    String s;
    <span class="dt">int</span> d;
    
    <span class="kw">public</span> <span class="fu">Sayi</span>(String s, <span class="dt">int</span> d) {
        
        <span class="kw">this</span>.<span class="fu">s</span> = s;
        <span class="kw">this</span>.<span class="fu">d</span> = d;
    }
    
    <span class="kw">public</span> <span class="dt">int</span> <span class="fu">onluk</span>() {
        <span class="co">// this.s&#39;i 10 tabanında döndür            </span>
        <span class="dt">int</span> r = <span class="dv">0</span>;
        
        <span class="kw">for</span> (<span class="dt">int</span> i = <span class="dv">0</span>; i &lt; <span class="kw">this</span>.<span class="fu">s</span>.<span class="fu">length</span>(); i++) {
            r += Integer.<span class="fu">parseInt</span>(<span class="kw">this</span>.<span class="fu">s</span>.<span class="fu">substring</span>(i, i<span class="dv">+1</span>)) * Math.<span class="fu">pow</span>(d, <span class="kw">this</span>.<span class="fu">s</span>.<span class="fu">length</span>()-i<span class="dv">-1</span>);
        }
        
        <span class="kw">return</span> r;
    }
    
    
    <span class="kw">public</span> <span class="dt">static</span> String <span class="fu">taban</span>(<span class="dt">int</span> s, <span class="dt">int</span> d) {
        <span class="co">// Girilen s sayısını d tabanında döndür</span>

        String r1 = <span class="st">&quot;&quot;</span>;
        String r2 = <span class="st">&quot;&quot;</span>;
        
        
        <span class="kw">while</span> (s &gt;= d) {
            r1 += s % d;
            s = s / d;
        }
        r1 += s;
        <span class="kw">for</span> (<span class="dt">int</span> i = <span class="dv">0</span>; i &lt; r1.<span class="fu">length</span>(); i++) {
            r2 += r1.<span class="fu">substring</span>(r1.<span class="fu">length</span>()-i<span class="dv">-1</span>, r1.<span class="fu">length</span>()-i);
        }
        <span class="kw">return</span> r2;
        
    }
    
    <span class="kw">public</span> <span class="dt">static</span> <span class="dt">void</span> <span class="fu">main</span>(String[] args) {
        
        Sayi deneme = <span class="kw">new</span> <span class="fu">Sayi</span>(<span class="st">&quot;134125&quot;</span>, <span class="dv">6</span>);
        System.<span class="fu">out</span>.<span class="fu">println</span>(deneme.<span class="fu">onluk</span>());
        System.<span class="fu">out</span>.<span class="fu">println</span>(Sayi.<span class="fu">taban</span>(<span class="dv">987652</span>, <span class="dv">2</span>));
    }
}</code></pre>
<p>Sorunun tamamı bu kadar değil de, bu kısımdan sonrası ıvır zıvır. Sınavda yaptım bu soruyu aslında da, muhtemelen bir sürü yanlışım çıkacaktır(yeterince detaylı incelenirse, hatta belki de kodum derlenemez bile).</p>
<p>Kağıt-kalem olduğumuz bu programlama sınavından öğrenilenler:</p>
<ul>
<li><p>Java’da String’lerle intler birbirlerine eklenebiliyor(concatenate yani, String’in yanına int’i String’e çevirerek ekleme). Sınavda int’i String’e çevirmeyi bulamadığım için eklenebildikleirini varsayarak yapmıştım. Gerçekten de öyleymiş.</p></li>
<li><p><code>this</code> kelimesi tam olarak Python’daki <code>self</code>e eşit değilmiş. Hala çözemedim tam olarak ama, bununla alakalı bir yazı yazacağım.</p></li>
<li><p>Kodu izlemek çok zor bir olay(değişkenlerin değerleri, ekrana yazdırılanlar vs). Scope, class ve instance değişkenlerinin özelliklerini vs. çok iyi bilmek gerekiyor. <code>this</code>e Python’daki <code>self</code> muamelesi yaptım, bakalım sonuç ne olacak.</p></li>
<li><p>IDLE, ipython gibi araçlardan mıdır nedir, test etmeden hiçbir şeyi düzgün yazamadığımı farkettim. Python’da ne zaman bir şeyden emin olmasam test ederek doğru yolu buluyordum. Java’da bu çok daha zor olduğundan, hatta kağıt kalem ile imkansız olduğundan, zor anlar yaşadım diyebiliriz.</p></li>
<li><p>Yine sanırım eski alışkanlıklardan, kodu okuyup takip etmek yerine, merak ettiğin yerlere print’ler yerleştirerek kodu takip ettiğimden, kağıt üzerinde etkili olamadım(?!) diyebilirim. Çok sinir bozucu bir iş.</p></li>
</ul>
<h2 id="ekleme">Ekleme</h2>
<p>Sınavdan birkaç dakika önce ‘ya çıkarsa’ diye bir arkadaşla yazdığımız, bir matrisin karesini alan kod:</p>
<pre class="sourceCode java"><code class="sourceCode java"><span class="kw">public</span> <span class="kw">class</span> MatrisDeneme {
    
    <span class="kw">public</span> <span class="dt">static</span> <span class="dt">void</span> <span class="fu">main</span>(String[] args) {
        
        <span class="dt">int</span>[][] matris ={{<span class="dv">3</span>, <span class="dv">5</span>, <span class="dv">9</span>},
                         {<span class="dv">5</span>, <span class="dv">6</span>, <span class="dv">1</span>},
                         {<span class="dv">6</span>, <span class="dv">8</span>, <span class="dv">10</span>}};
        
        <span class="dt">int</span>[][] yeni ={{<span class="dv">0</span>, <span class="dv">0</span>, <span class="dv">0</span>},
                        {<span class="dv">0</span>, <span class="dv">0</span>, <span class="dv">0</span>},
                        {<span class="dv">0</span>, <span class="dv">0</span>, <span class="dv">0</span>}};
            
        <span class="kw">if</span> (matris.<span class="fu">length</span> != matris[^<span class="dv">0</span>]length) {
            <span class="co">// yapilamaz</span>
        } <span class="kw">else</span> {
            <span class="kw">for</span> (<span class="dt">int</span> i = <span class="dv">0</span>; i &lt; matris.<span class="fu">length</span>; i++) {
                <span class="co">// 0 1 2</span>
                <span class="kw">for</span> (<span class="dt">int</span> j = <span class="dv">0</span>; j &lt; matris.<span class="fu">length</span>; j++) {
                    <span class="co">// 00 01 02 10 11 12 20 21 22</span>
                    <span class="kw">for</span> (<span class="dt">int</span> k = <span class="dv">0</span>; k &lt; matris.<span class="fu">length</span>; k++) {
                        yeni[i][j] += matris[k][j]*matris[j][k];
                    }
                }
            }
        }
        
        System.<span class="fu">out</span>.<span class="fu">println</span>(yeni[^<span class="dv">2</span>]<span class="dv">2</span>]);
        System.<span class="fu">out</span>.<span class="fu">println</span>(yeni[^<span class="dv">0</span>]<span class="dv">1</span>]);
    }

}</code></pre>]]></summary>
</entry>

</feed>
