<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title>osa1.net - Posts tagged coffeescript</title>
    <link href="http://osa1.net/tags/coffeescript.xml" rel="self" />
    <link href="http://osa1.net" />
    <id>http://osa1.net/tags/coffeescript.xml</id>
    <author>
        <name>Ömer Sinan Ağacan</name>
        <email>omeragaca@gmail.com</email>
    </author>
    <updated>2013-04-17T00:00:00Z</updated>
    <entry>
    <title>THREE.js axis helper</title>
    <link href="http://osa1.net/posts/2013-04-17-THREEjs-axis-helper.html" />
    <id>http://osa1.net/posts/2013-04-17-THREEjs-axis-helper.html</id>
    <published>2013-04-17T00:00:00Z</published>
    <updated>2013-04-17T00:00:00Z</updated>
    <summary type="html"><![CDATA[<p>I’m using <a href="http://threejs.org">THREE.js</a> for a project I’m working on. This is my first experience programming a 3D environment and I’m having hard times wrapping my head around 3D coordinate system.</p>
<p>So I wrote a helper function that draws axis arrows to the scene center to help me see how to translate/rotate my objects.</p>
<div class="sourceCode" id="cb1"><pre class="sourceCode coffee"><code class="sourceCode coffee"><a class="sourceLine" id="cb1-1" data-line-number="1">drawAxisHelpers <span class="kw">=</span> <span class="fu">(params = {}) -&gt;</span></a>
<a class="sourceLine" id="cb1-2" data-line-number="2">    params<span class="kw">.</span>radius <span class="kw">=</span> params<span class="kw">.</span>radius <span class="kw">||</span> <span class="fl">0.05</span></a>
<a class="sourceLine" id="cb1-3" data-line-number="3">    params<span class="kw">.</span>height <span class="kw">=</span> params<span class="kw">.</span>height <span class="kw">||</span> <span class="dv">2</span></a>
<a class="sourceLine" id="cb1-4" data-line-number="4">    params<span class="kw">.</span>scene  <span class="kw">=</span> params<span class="kw">.</span>scene  <span class="kw">||</span> scene</a>
<a class="sourceLine" id="cb1-5" data-line-number="5"></a>
<a class="sourceLine" id="cb1-6" data-line-number="6">    arrowGeometry <span class="kw">=</span> <span class="kw">new</span> <span class="dt">THREE.CylinderGeometry</span> <span class="dv">0</span><span class="kw">,</span> <span class="dv">2</span> <span class="kw">*</span> params<span class="kw">.</span>radius<span class="kw">,</span> params<span class="kw">.</span>height <span class="kw">/</span> <span class="dv">5</span></a>
<a class="sourceLine" id="cb1-7" data-line-number="7"></a>
<a class="sourceLine" id="cb1-8" data-line-number="8">    xAxisMaterial <span class="kw">=</span> <span class="kw">new</span> <span class="dt">THREE.MeshBasicMaterial</span> color<span class="kw">:</span> <span class="dv">0xFF0000</span></a>
<a class="sourceLine" id="cb1-9" data-line-number="9">    xAxisGeometry <span class="kw">=</span> <span class="kw">new</span> <span class="dt">THREE.CylinderGeometry</span> params<span class="kw">.</span>radius<span class="kw">,</span> params<span class="kw">.</span>radius<span class="kw">,</span> params<span class="kw">.</span>height</a>
<a class="sourceLine" id="cb1-10" data-line-number="10">    xAxisMesh     <span class="kw">=</span> <span class="kw">new</span> <span class="dt">THREE.Mesh</span> xAxisGeometry<span class="kw">,</span> xAxisMaterial</a>
<a class="sourceLine" id="cb1-11" data-line-number="11">    xArrowMesh    <span class="kw">=</span> <span class="kw">new</span> <span class="dt">THREE.Mesh</span> arrowGeometry<span class="kw">,</span> xAxisMaterial</a>
<a class="sourceLine" id="cb1-12" data-line-number="12">    xAxisMesh<span class="kw">.</span>add xArrowMesh</a>
<a class="sourceLine" id="cb1-13" data-line-number="13">    xArrowMesh<span class="kw">.</span>position<span class="kw">.</span>y <span class="kw">+=</span> params<span class="kw">.</span>height <span class="kw">/</span> <span class="dv">2</span></a>
<a class="sourceLine" id="cb1-14" data-line-number="14">    xAxisMesh<span class="kw">.</span>rotation<span class="kw">.</span>z  <span class="kw">-=</span> <span class="dv">90</span> <span class="kw">*</span> <span class="ot">Math</span><span class="kw">.</span>PI <span class="kw">/</span> <span class="dv">180</span></a>
<a class="sourceLine" id="cb1-15" data-line-number="15">    xAxisMesh<span class="kw">.</span>position<span class="kw">.</span>x  <span class="kw">+=</span> params<span class="kw">.</span>height <span class="kw">/</span> <span class="dv">2</span></a>
<a class="sourceLine" id="cb1-16" data-line-number="16">    params<span class="kw">.</span>scene<span class="kw">.</span>add xAxisMesh</a>
<a class="sourceLine" id="cb1-17" data-line-number="17"></a>
<a class="sourceLine" id="cb1-18" data-line-number="18">    yAxisMaterial <span class="kw">=</span> <span class="kw">new</span> <span class="dt">THREE.MeshBasicMaterial</span> color<span class="kw">:</span> <span class="dv">0x00FF00</span></a>
<a class="sourceLine" id="cb1-19" data-line-number="19">    yAxisGeometry <span class="kw">=</span> <span class="kw">new</span> <span class="dt">THREE.CylinderGeometry</span> params<span class="kw">.</span>radius<span class="kw">,</span> params<span class="kw">.</span>radius<span class="kw">,</span> params<span class="kw">.</span>height</a>
<a class="sourceLine" id="cb1-20" data-line-number="20">    yAxisMesh     <span class="kw">=</span> <span class="kw">new</span> <span class="dt">THREE.Mesh</span> yAxisGeometry<span class="kw">,</span> yAxisMaterial</a>
<a class="sourceLine" id="cb1-21" data-line-number="21">    yArrowMesh    <span class="kw">=</span> <span class="kw">new</span> <span class="dt">THREE.Mesh</span> arrowGeometry<span class="kw">,</span> yAxisMaterial</a>
<a class="sourceLine" id="cb1-22" data-line-number="22">    yAxisMesh<span class="kw">.</span>add yArrowMesh</a>
<a class="sourceLine" id="cb1-23" data-line-number="23">    yArrowMesh<span class="kw">.</span>position<span class="kw">.</span>y <span class="kw">+=</span> params<span class="kw">.</span>height <span class="kw">/</span> <span class="dv">2</span></a>
<a class="sourceLine" id="cb1-24" data-line-number="24">    yAxisMesh<span class="kw">.</span>position<span class="kw">.</span>y  <span class="kw">+=</span> params<span class="kw">.</span>height <span class="kw">/</span> <span class="dv">2</span></a>
<a class="sourceLine" id="cb1-25" data-line-number="25">    params<span class="kw">.</span>scene<span class="kw">.</span>add yAxisMesh</a>
<a class="sourceLine" id="cb1-26" data-line-number="26"></a>
<a class="sourceLine" id="cb1-27" data-line-number="27">    zAxisMaterial <span class="kw">=</span> <span class="kw">new</span> <span class="dt">THREE.MeshBasicMaterial</span> color<span class="kw">:</span> <span class="dv">0x0000FF</span></a>
<a class="sourceLine" id="cb1-28" data-line-number="28">    zAxisGeometry <span class="kw">=</span> <span class="kw">new</span> <span class="dt">THREE.CylinderGeometry</span> params<span class="kw">.</span>radius<span class="kw">,</span> params<span class="kw">.</span>radius<span class="kw">,</span> params<span class="kw">.</span>height</a>
<a class="sourceLine" id="cb1-29" data-line-number="29">    zAxisMesh     <span class="kw">=</span> <span class="kw">new</span> <span class="dt">THREE.Mesh</span> zAxisGeometry<span class="kw">,</span> zAxisMaterial</a>
<a class="sourceLine" id="cb1-30" data-line-number="30">    zArrowMesh    <span class="kw">=</span> <span class="kw">new</span> <span class="dt">THREE.Mesh</span> arrowGeometry<span class="kw">,</span> zAxisMaterial</a>
<a class="sourceLine" id="cb1-31" data-line-number="31">    zAxisMesh<span class="kw">.</span>add zArrowMesh</a>
<a class="sourceLine" id="cb1-32" data-line-number="32">    zAxisMesh<span class="kw">.</span>rotation<span class="kw">.</span>x  <span class="kw">+=</span> <span class="dv">90</span> <span class="kw">*</span> <span class="ot">Math</span><span class="kw">.</span>PI <span class="kw">/</span> <span class="dv">180</span></a>
<a class="sourceLine" id="cb1-33" data-line-number="33">    zArrowMesh<span class="kw">.</span>position<span class="kw">.</span>y <span class="kw">+=</span> params<span class="kw">.</span>height <span class="kw">/</span> <span class="dv">2</span></a>
<a class="sourceLine" id="cb1-34" data-line-number="34">    zAxisMesh<span class="kw">.</span>position<span class="kw">.</span>z  <span class="kw">+=</span> params<span class="kw">.</span>height <span class="kw">/</span> <span class="dv">2</span></a>
<a class="sourceLine" id="cb1-35" data-line-number="35">    params<span class="kw">.</span>scene<span class="kw">.</span>add zAxisMesh</a></code></pre></div>
<p><code>drawAxisHelpers</code> function takes named parameters, all optional. <code>radius</code> and <code>height</code> are for sizes of arrows, and <code>scene</code> is the scene object to draw arrows. When isn’t provided, a global <code>scene</code> object is used.</p>
<p>Here’s an example: (you can zoom in/out with mouse scroll, move around with left/right clicks)</p>
<canvas id="target" width="600" height="600" style="background-color: #39342E; float: center;">
</canvas>
<p>In this example I used <code>OrbitAndPanControls</code> class to enable zooming/moving around with mouse. I copied this class from Udacity’s ‘CS291 - Interactive 3D Rendering’ course’s examples. You can see this post’s source to learn more.</p>
<script src="/js/three.min.js"></script>
<script src="/js/OrbitAndPanControls.js"></script>
<script type="text/javascript">
  // Generated by CoffeeScript 1.6.2
  var camera, cameraControls, canvas, clock, drawAxisHelpers, render, renderer;

  canvas = document.getElementById("target");

  renderer = new THREE.WebGLRenderer({
    canvas: canvas
  });

  renderer.setSize(canvas.width, canvas.height);

  clock = new THREE.Clock();

  window.scene = new THREE.Scene();

  camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);

  cameraControls = new THREE.OrbitAndPanControls(camera, renderer.domElement);

  cameraControls.target.set(0, 0, 0);

  drawAxisHelpers = function(params) {
    var arrowGeometry, xArrowMesh, xAxisGeometry, xAxisMaterial, xAxisMesh, yArrowMesh, yAxisGeometry, yAxisMaterial, yAxisMesh, zArrowMesh, zAxisGeometry, zAxisMaterial, zAxisMesh;

    if (params == null) {
      params = {};
    }
    params.radius = params.radius || 0.05;
    params.height = params.height || 2;
    params.scene = params.scene || scene;
    arrowGeometry = new THREE.CylinderGeometry(0, 2 * params.radius, params.height / 5);
    xAxisMaterial = new THREE.MeshBasicMaterial({
      color: 0xFF0000
    });
    xAxisGeometry = new THREE.CylinderGeometry(params.radius, params.radius, params.height);
    xAxisMesh = new THREE.Mesh(xAxisGeometry, xAxisMaterial);
    xArrowMesh = new THREE.Mesh(arrowGeometry, xAxisMaterial);
    xAxisMesh.add(xArrowMesh);
    xArrowMesh.position.y += params.height / 2;
    xAxisMesh.rotation.z -= 90 * Math.PI / 180;
    xAxisMesh.position.x += params.height / 2;
    params.scene.add(xAxisMesh);
    yAxisMaterial = new THREE.MeshBasicMaterial({
      color: 0x00FF00
    });
    yAxisGeometry = new THREE.CylinderGeometry(params.radius, params.radius, params.height);
    yAxisMesh = new THREE.Mesh(yAxisGeometry, yAxisMaterial);
    yArrowMesh = new THREE.Mesh(arrowGeometry, yAxisMaterial);
    yAxisMesh.add(yArrowMesh);
    yArrowMesh.position.y += params.height / 2;
    yAxisMesh.position.y += params.height / 2;
    params.scene.add(yAxisMesh);
    zAxisMaterial = new THREE.MeshBasicMaterial({
      color: 0x0000FF
    });
    zAxisGeometry = new THREE.CylinderGeometry(params.radius, params.radius, params.height);
    zAxisMesh = new THREE.Mesh(zAxisGeometry, zAxisMaterial);
    zArrowMesh = new THREE.Mesh(arrowGeometry, zAxisMaterial);
    zAxisMesh.add(zArrowMesh);
    zAxisMesh.rotation.x += 90 * Math.PI / 180;
    zArrowMesh.position.y += params.height / 2;
    zAxisMesh.position.z += params.height / 2;
    return params.scene.add(zAxisMesh);
  };

  drawAxisHelpers();

  camera.position.z = 5;

  render = function() {
    var delta;

    delta = clock.getDelta();
    cameraControls.update(delta);
    requestAnimationFrame(render);
    return renderer.render(scene, camera);
  };

  render();
</script>]]></summary>
</entry>

</feed>
